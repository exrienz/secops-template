name: DevSecOps Template

on:
  workflow_call:
    inputs:
      run_sca:
        description: "Run SCA/SBOM scan"
        required: false
        default: true
        type: boolean
      run_bandit:
        description: "Run Bandit scan"
        required: false
        default: true
        type: boolean
      run_sonarqube:
        description: "Run SonarQube scan"
        required: false
        default: true
        type: boolean
      run_build:
        description: "Build & Push Docker image"
        required: false
        default: true
        type: boolean

jobs:

  # ----------------------------
  # SBOM / SCA
  # ----------------------------
  sca-scan:
    if: ${{ inputs.run_sca }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SBOM Generation (codenotary)
        uses: codenotary/sbom.sh-create@main
        with:
          scan_type: 'grypefs'
          target: '.'
      - run: echo "$SBOM_SHARE_URL" > sbom-url.txt
      - uses: actions/upload-artifact@v4
        with:
          name: sbom-report
          path: sbom-url.txt

  # ----------------------------
  # SonarQube
  # ----------------------------
  sast-sonarqube:
    if: ${{ inputs.run_sonarqube }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        continue-on-error: true

  # ----------------------------
  # Build & Push
  # ----------------------------
  docker-build:
    if: ${{ inputs.run_build }}
    runs-on: ubuntu-latest
    needs: [sca-scan, sast-bandit, sast-sonarqube]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'
      - run: pip install pre-commit
      - name: Run Pre-commit Hooks
        run: |
          pre-commit install
          pre-commit run --all-files --show-diff-on-failure
        continue-on-error: true
      - name: Set Image Tags
        id: tagger
        run: |
          echo "tag=$(date +'%Y%m%d')-${GITHUB_SHA::7}" >> $GITHUB_OUTPUT
          echo "latest=latest" >> $GITHUB_OUTPUT
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/sentinelv2:${{ steps.tagger.outputs.tag }}
            ${{ secrets.DOCKERHUB_USERNAME }}/sentinelv2:latest
